from django.http import HttpResponse, HttpResponseNotFound, Http404
from django.middleware.csrf import get_token
from django.shortcuts import render, redirect
from django.utils.timezone import utc
from models import *
import urllib
import json
import datetime

def WeatherMain(request):
	raise Http404

def getWeatherArray(postcode):
	try:
		localWeatherObject = Weather.objects.get(Postcode=postcode)
		if localWeatherObject.LoadDate < datetime.datetime.utcnow().replace(tzinfo=utc) - datetime.timedelta(hours=1):
			localWeatherObject = updateWeather(postcode)
	except Weather.DoesNotExist:
		localWeatherObject = updateWeather(postcode)
	
	return json.loads(localWeatherObject.WeatherString)

def returnWeatherItem(postcode):
	try:
		localWeatherObject = Weather.objects.get(Postcode=postcode)
		if localWeatherObject.LoadDate < datetime.datetime.utcnow().replace(tzinfo=utc) - datetime.timedelta(hours=1):
			localWeatherObject = updateWeather(postcode)
	except Weather.DoesNotExist:
		localWeatherObject = updateWeather(postcode)
	
	return localWeatherObject

def updateWeather(postcode):
	apiKey = "/cfKV7kxu5"
	url = "http://www.myweather2.com/developer/forecast.ashx?uac=" + apiKey + "&output=json&query=" + postcode
	page = urllib.urlopen(url).read()
	
	try:
		localWeatherObject = Weather.objects.get(Postcode=postcode)
		localWeatherObject.WeatherString = page
		localWeatherObject.save()
	except Weather.DoesNotExist:
		localWeatherObject = Weather(Postcode=postcode, WeatherString=page)
		localWeatherObject.save()
	
	return localWeatherObject

def getTemp(postcode, date=0):
	weatherItem = returnWeatherItem(postcode)
	return "Not Implemented"
