# Create your views here.
from django.http import HttpResponse, HttpResponseNotFound
from django.shortcuts import render
from django.shortcuts import redirect
from Lights.background import *
from SharedFunctions.deviceControl import *
from Lights.addLightPage import *
from models import *
from Lights.api import *

def LightsMain(request):
	#temp-needs to be moved to arduino section
	lightId = request.GET.get('lightId', '0')
	if request.GET.get('command', 'None') == 'toggleLightState':
		theLight = Lights.objects.get(id=lightId)
		if theLight.LightState == "Off":
			if theLight.LightType == "RGBLight":
				DeviceControl().scrollDeviceRGBState(theLight.IpAddress, theLight.DeviceType, 0, 0, 0, theLight.R, theLight.G, theLight.B)
			else:
				DeviceControl().setOnOffDeviceState(theLight.IpAddress, theLight.DeviceType, True)
			theLight.LightState = "On"
		else:
			if theLight.LightType == "RGBLight":
				DeviceControl().scrollDeviceRGBState(theLight.IpAddress, theLight.DeviceType, theLight.R, theLight.G, theLight.B, 0, 0, 0)
			else:
				DeviceControl().setOnOffDeviceState(theLight.IpAddress, theLight.DeviceType, False)
			theLight.LightState = "Off"
		theLight.save()
		return HttpResponse("Ok")
	if not request.user.is_authenticated():
		return redirect('/Login?next=%s' % request.path)
	else:
		if request.GET.get('command', 'None') == 'None':
			lights = getLightsForRoom('all')
			links = getSideBar(request.GET.get('room', 'all'), lights)
			title = getPageTitle(request.GET.get('room', 'all'), request)
			page = getPageContent(request, request.GET.get('room', 'all'))
			return render(request, 'pages/Lights.html', {'PageAreaTitle': title, 'PageAreaContent': page, 'links': links})
		else:
			lightId = request.GET.get('lightId', '0')
			if request.GET.get('command', 'None') == 'toggleLightState':
				theLight = Lights.objects.get(id=lightId)
				if theLight.LightState == "Off":
					if theLight.LightType == "RGBLight":
						DeviceControl().scrollDeviceRGBState(theLight.IpAddress, theLight.DeviceType, 0, 0, 0, theLight.R, theLight.G, theLight.B)
					else:
						DeviceControl().setOnOffDeviceState(theLight.IpAddress, theLight.DeviceType, True)
					theLight.LightState = "On"
				else:
					if theLight.LightType == "RGBLight":
						DeviceControl().scrollDeviceRGBState(theLight.IpAddress, theLight.DeviceType, theLight.R, theLight.G, theLight.B, 0, 0, 0)
					else:
						DeviceControl().setOnOffDeviceState(theLight.IpAddress, theLight.DeviceType, False)
					theLight.LightState = "Off"
				theLight.save()
				return HttpResponse("Ok")
			elif request.GET.get('command', 'None') == 'turnOn':
				theLight = Lights.objects.get(id=lightId)
				if theLight.LightType == "RGBLight":
					DeviceControl().scrollDeviceRGBState(theLight.IpAddress, theLight.DeviceType, 0, 0, 0, theLight.R, theLight.G, theLight.B)
				else:
					DeviceControl().setOnOffDeviceState(theLight.IpAddress, theLight.DeviceType, True)
				theLight.LightState = "On"
				theLight.save()
				return HttpResponse("Ok")
			elif request.GET.get('command', 'None') == 'turnOff':
				theLight = Lights.objects.get(id=lightId)
				if theLight.LightType == "RGBLight":
					DeviceControl().scrollDeviceRGBState(theLight.IpAddress, theLight.DeviceType, theLight.R, theLight.G, theLight.B, 0, 0, 0)
				else:
					DeviceControl().setOnOffDeviceState(theLight.IpAddress, theLight.DeviceType, False)
				theLight.LightState = "Off"
				theLight.save()
				return HttpResponse("Ok")
			elif request.GET.get('command', 'None') == 'setColour':
				return HttpResponse("Ok")
			elif request.GET.get('command', 'None') == 'setScroll':
				newScrollMode = request.GET.get('ScrollMode', 'Off')
				currentlyRunningCount = Lights.objects.filter(Scroll=newScrollMode).count()
				theLight = Lights.objects.get(id=lightId)
				theLight.Scroll = str(newScrollMode)
				theLight.save()
				if str(currentlyRunningCount) == "0":
					if str(newScrollMode) != "Off":
						runScrollMode.delay(newScrollMode)
				return HttpResponse("Ok")
			elif request.GET.get('command', 'None') == 'getR':
				theLight = Lights.objects.get(id=lightId)
				return HttpResponse(theLight.R)
			elif request.GET.get('command', 'None') == 'getG':
				theLight = Lights.objects.get(id=lightId)
				return HttpResponse(theLight.G)
			elif request.GET.get('command', 'None') == 'getB':
				theLight = Lights.objects.get(id=lightId)
				return HttpResponse(theLight.B)
			elif request.GET.get('command', 'None') == 'setR':
				theLight = Lights.objects.get(id=lightId)
				newR = request.GET.get('value','')
				if (0 <= int(newR) < 256):
					DeviceControl().scrollDeviceRGBState(theLight.IpAddress, theLight.DeviceType, theLight.R, theLight.G, theLight.B, newR, theLight.G, theLight.B)
					theLight.R = newR
					theLight.save()
					return HttpResponse()
				else:
					return HttpResponse("Please Enter A Number Between 0 And 255", status=400)
			elif request.GET.get('command', 'None') == 'setG':
				theLight = Lights.objects.get(id=lightId)
				newG = request.GET.get('value','')
				if (0 <= int(newG) < 256):
					DeviceControl().scrollDeviceRGBState(theLight.IpAddress, theLight.DeviceType, theLight.R, theLight.G, theLight.B, theLight.R, newG, theLight.B)
					theLight.G = newG
					theLight.save()
					return HttpResponse()
				else:
					return HttpResponse("Please Enter A Number Between 0 And 255", status=400)
			elif request.GET.get('command', 'None') == 'setB':
				theLight = Lights.objects.get(id=lightId)
				newB = request.GET.get('value','')
				if (0 <= int(newB) < 256):
					DeviceControl().scrollDeviceRGBState(theLight.IpAddress, theLight.DeviceType, theLight.R, theLight.G, theLight.B, theLight.R, theLight.G, newB)
					theLight.B = newB
					theLight.save()
					return HttpResponse()
				else:
					return HttpResponse("Please Enter A Number Between 0 And 255", status=400)
			elif request.GET.get('command', 'None') == 'setRGB':
				theLight = Lights.objects.get(id=lightId)
				newR = request.GET.get('value','')
				newG = request.GET.get('value','')
				newB = request.GET.get('value','')
				if ((0 <= int(newR) < 256) and (0 <= int(newG) < 256) and (0 <= int(newB) < 256)):
					DeviceControl().scrollDeviceRGBState(theLight.IpAddress, theLight.DeviceType, theLight.R, theLight.G, theLight.B, newR, newG, newB)
					theLight.R = newR
					theLight.G = newG
					theLight.B = newB
					theLight.save()
					return HttpResponse()
				else:
					return HttpResponse("Please Enter A Number Between 0 And 255", status=400)
			else:
				return LightApi().webRequest(request)

def getSideBar(currentPage, lights):
	links = [{'title': 'All Rooms', 'address': '/Lights', 'active': getSideBarActiveState('all', currentPage)}]
	rooms = []
	
	for alight in lights:
		if not alight.RoomName in rooms:
			rooms.append(alight.RoomName)
	
	for room in rooms:
		address = '/Lights?room=' + room
		sidebarItem = {'title': room.replace("_", " ") , 'address': address , 'active':getSideBarActiveState(room, currentPage)}
		links.append(sidebarItem)
	
	return links

def getSideBarActiveState(sidebarItem, currentPage):
	if sidebarItem == currentPage:
		return 'active'
	else:
		return ''

def getPageTitle(currentPage, request):
	if request.GET.get('page', 'None') == 'None':
		if currentPage == 'all':
			return "All Rooms"
		else:
			return currentPage.replace("_", " ")
	elif request.GET.get('page', 'None') == 'addLightPage':
		return "Add Light"
	else:
		return "Error"

def getPageContent(request, currentPage):
	if request.GET.get('page', 'None') == 'None':
		lights = getLightsForRoom(currentPage)
		return returnLightsTableForLights(lights, request)
	elif request.GET.get('page', 'None') == 'addLightPage':
		return returnAddUserPage(request)
	else:
		return ""

def getLightsForRoom(room):
	if room == 'all':
		return Lights.objects.all()
	else:
		return Lights.objects.filter(RoomName=room)

def returnLightsTableForLights(lights, request):
	pageContent = "<table id=\"lightTable\" class=\"table table-striped\">\
			<thead>\
				<tr>\
					<th>#</th>\
					<th>Light Name</th>\
					<th>Room</th>\
					<th>State</th>\
					<th>Controls</th>\
				</tr>\
			</thead>\
			<tbody>"
	for alight in lights:
		pageContent += "<tr>"
		
		pageContent += "<td>" + str(alight.id) + "</td>"
		pageContent += "<td>" + alight.LightName.replace("_", " ") + "</td>"
		pageContent += "<td>" + alight.RoomName.replace("_", " ") + "</td>"
		
		if alight.LightType == "RGBLight":
			pageContent += "<td>"
			pageContent += "<p class=\"text-error\" name=\"light" + str(alight.id) + "Red\">R= "
			pageContent += "<s id=\"rgbR" + str(alight.id) + "\" data-type=\"text\" data-pk=\"1\" data-url=\"/Lights/?command=setR&lightId=" + str(alight.id) + "\" data-original-title=\"Set Red Level\">"
			pageContent += str(alight.R)
			pageContent += "</s>"
			pageContent += ", </p><p class=\"text-success\" name=\"light" + str(alight.id) + "Green\">G= "
			pageContent += "<s id=\"rgbG" + str(alight.id) + "\" data-type=\"text\" data-pk=\"1\" data-url=\"/Lights/?command=setG&lightId=" + str(alight.id) + "\" data-original-title=\"Set Green Level\">"
			pageContent += str(alight.G)
			pageContent += "</s>"
			pageContent += ", </p><p class=\"text-info\" name=\"light" + str(alight.id) + "Blue\">B= "
			pageContent += "<s id=\"rgbB" + str(alight.id) + "\" data-type=\"text\" data-pk=\"1\" data-url=\"/Lights/?command=setB&lightId=" + str(alight.id) + "\" data-original-title=\"Set Blue Level\">"
			pageContent += str(alight.B)
			pageContent += "</s>"
			pageContent += "</p>"
			pageContent += "</td>"
		else:
			if alight.LightState == "On":
				pageContent += "<td name=\"light" + str(alight.id) + "State\" class=\"text-success\">" + alight.LightState + "</td>"
			else:
				pageContent += "<td name=\"light" + str(alight.id) + "State\" class=\"text-error\" >" + alight.LightState + "</td>"
		
		pageContent += "<td>"
		if alight.LightType == "RGBLight":
			pageContent += "<div class=\"btn-group\">"
			if alight.LightState == "Off":
				pageContent += "<button class=\"btn btn-success\" name=\"light" + str(alight.id) + "OnOff\" onClick=\"switchState(\'" + str(alight.id) + "\')\">Turn On</button>\n"
				pageContent += "<button class=\"btn btn-success dropdown-toggle\" name=\"light" + str(alight.id) + "DropDown\" data-toggle=\"dropdown\"><span class=\"caret\"></span></button>\n"
			else:
				pageContent += "<button class=\"btn btn-danger\" name=\"light" + str(alight.id) + "OnOff\" onClick=\"switchState(\'" + str(alight.id) + "\')\">Turn Off</button>\n"
				pageContent += "<button class=\"btn btn-danger dropdown-toggle\" name=\"light" + str(alight.id) + "DropDown\" data-toggle=\"dropdown\"><span class=\"caret\"></span></button>\n"
			pageContent += "<ul class=\"dropdown-menu\">"
			pageContent += "<li><a href=\"#\">Change Colour</a></li>"
			pageContent += "<li class=\"dropdown-submenu pull-left\">"
			pageContent += "<a tabindex=\"-1\" href=\"#\">Scroll Mode</a>"
			pageContent += "<ul class=\"dropdown-menu\">"
			pageContent += "<li><a tabindex=\"-1\" onClick=\"setScroll(\'" + str(alight.id) + "\', \'Off\')\">Off<i name=\"Light" + str(alight.id) + "ScrollOff\" class=\""
			if alight.Scroll == "Off":
				pageContent += "icon-ok"
			pageContent += " pull-right\"></i></a></li>"
			pageContent += "<li><a tabindex=\"-1\" onClick=\"setScroll(\'" + str(alight.id) + "\', \'All\')\">All<i name=\"Light" + str(alight.id) + "ScrollAll\" class=\""
			if alight.Scroll == "All":
				pageContent += "icon-ok"
			pageContent += " pull-right\"></i></a></li>"
			pageContent += "<li><a tabindex=\"-1\" onClick=\"setScroll(\'" + str(alight.id) + "\', \'Red\')\">Red<i name=\"Light" + str(alight.id) + "ScrollRed\" class=\""
			if alight.Scroll == "Red":
				pageContent += "icon-ok"
			pageContent += " pull-right\"></i></a></li>"
			pageContent += "<li><a tabindex=\"-1\" onClick=\"setScroll(\'" + str(alight.id) + "\', \'Green\')\">Green<i name=\"Light" + str(alight.id) + "ScrollGreen\" class=\""
			if alight.Scroll == "Green":
				pageContent += "icon-ok"
			pageContent += " pull-right\"></i></a></li>"
			pageContent += "<li><a tabindex=\"-1\" onClick=\"setScroll(\'" + str(alight.id) + "\', \'Blue\')\">Blue<i name=\"Light" + str(alight.id) + "ScrollBlue\" class=\""
			if alight.Scroll == "Blue":
				pageContent += "icon-ok"
			pageContent += " pull-right\"></i></a></li>"
			pageContent += "</ul>"
			pageContent += "</li>"
			pageContent += "<li class=\"dropdown-submenu pull-left\">"
			pageContent += "<a tabindex=\"-2\" href=\"#\">Scene</a>"
			pageContent += "<ul class=\"dropdown-menu\">"
			pageContent += "<li><a tabindex=\"-2\" onClick=\"setScroll(\'" + str(alight.id) + "\', \'Off\')\">Movie<i name=\"Light" + str(alight.id) + "ScrollOff\" class=\"pull-right\"></i></a></li>"
			pageContent += "</li>"
			pageContent += "</ul>\n"
                        pageContent += "</div>\n"
		else:
			if alight.LightState == "Off":
				pageContent += "<button class=\"btn btn-success\" name=\"light" + str(alight.id) + "OnOff\" onClick=\"switchState(\'" + str(alight.id) + "\')\">Turn On</button>\n"
			else:
				pageContent += "<button class=\"btn btn-danger\" name=\"light" + str(alight.id) + "OnOff\" onClick=\"switchState(\'" + str(alight.id) + "\')\">Turn Off</button>\n"
			pageContent += ""
		pageContent += "</td>"
		pageContent += "</tr>"
	pageContent += "<tr>"
	pageContent += "<td></td>"
	pageContent += "<td></td>"
	pageContent += "<td></td>"
	pageContent += "<td></td>"
	pageContent += "<td><a href=\"/Lights?page=addLightPage&room=" + request.GET.get('room', 'All') + "\"><button class=\"btn btn-primary\">+</button></a></td>"
	pageContent += "</tr>"
	pageContent += "</tbody>"
	pageContent += "</table>"
	
	return pageContent
